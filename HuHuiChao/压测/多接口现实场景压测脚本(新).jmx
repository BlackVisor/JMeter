<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="3.2" jmeter="3.2 r1790748">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="测试计划" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="线程组" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="循环控制器" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">600</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1505106880000</longProp>
        <longProp name="ThreadGroup.end_time">1505106880000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="事务控制器" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="用户手机号登录" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">offerplus.imwork.net</stringProp>
            <stringProp name="HTTPSampler.port">82</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/offerplus/login.do?${postPro}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellTimer guiclass="TestBeanGUI" testclass="BeanShellTimer" testname="初始化数据" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import java.util.ArrayList;
import java.util.Collections;
import java.util.Comparator;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import test.signPwd;
import org.apache.commons.codec.digest.DigestUtils;

String [] appTypes = {&quot;A&quot;, &quot;I&quot;};
long L = System.currentTimeMillis();

Map map = new HashMap();
//此处为接口必传参数
map.put(&quot;packageName&quot;, &quot;com.Ejetsolutions.offerplus&quot;);
map.put(&quot;appType&quot;, &quot;I&quot;);
map.put(&quot;version&quot;, &quot;1.1.5&quot;);

map.put(&quot;languagePack&quot;, &quot;EN&quot;);
map.put(&quot;source&quot;, &quot;0&quot;);
map.put(&quot;timestamp&quot;, String.valueOf(L));

//以下入参，每个接口入参不同，这边定义
map.put(&quot;loginName&quot;, vars.get(&quot;userId&quot;));
map.put(&quot;password&quot;, new signPwd().MD5sign(vars.get(&quot;password&quot;)));

String []str = new String[map.size()];

Iterator it = map.keySet().iterator();  

StringBuffer sb = new StringBuffer();
sb.append(&quot;&quot;);
int i = 0;
while(it.hasNext()) {
	str[i] = (String) it.next();
	i ++;
}

//排序
Arrays.sort(str);

for (int j = 0; j &lt; str.length; j ++) {
	sb.append(str[j]).append(&quot;=&quot;).append(map.get(str[j]));
	if (j != str.length -1) {
		sb.append(&quot;&amp;&quot;);
	} 
}


//对入参进行MD5签名
String sign = DigestUtils.md5Hex(sb.toString() + &quot;&amp;99ca919b-4c6e-46d7-b25e-e0cbb9003436&quot;);

String postPro = sb.append(&quot;&amp;sign=&quot;).append(sign).toString();

vars.put(&quot;postPro&quot;, postPro);</stringProp>
            </BeanShellTimer>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1783684952">&quot;status&quot;:&quot;000&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="获取接口返回结果" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">data</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;data&quot;:&quot;(.+?)&quot;,</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">-1</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
              <stringProp name="BeanShellAssertion.query">import org.apache.jmeter.assertions; 
import org.apache.jmeter.samplers.SampleResult; 
import org.apache.jmeter.assertions.AssertionResult; 
import org.json.*;
import test.AesUtils;
import com.alibaba.fastjson.JSONObject;
import com.alibaba.fastjson.JSON;
import com.alibaba.fastjson.JSONArray;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

String isEncrypt = &quot;true&quot;;
if (isEncrypt.equals(&quot;true&quot;)) {
	String KEY = &quot;6mpQfK5BSzzOfrZ6&quot;;
	AesUtils appAes = new AesUtils();
	String encrypt = vars.get(&quot;data&quot;);
	
	if (encrypt.equals(&quot;-1&quot;)) {
		
		Failure = false;
	} else {
		try{
			byte[] un = appAes.uncompress(appAes.base64Decode(encrypt));
			String jsonStr = new String(java.net.URLDecoder.decode(appAes.aesDecryptByBytes(un,KEY)).getBytes(), &quot;UTF-8&quot;);
			FailureMessage = &quot;成功，解密的json串：&quot; + jsonStr; 
			Failure = false;
			// tokenId正则表达式规则
	          String regEx = &quot;\&quot;tokenId\&quot;:\&quot;(.+?)\&quot;&quot;;
	          // 编译正则表达式
	          Pattern pattern = Pattern.compile(regEx);
	          // 忽略大小写的写法
	          // Pattern pat = Pattern.compile(regEx, Pattern.CASE_INSENSITIVE);
	          Matcher matcher = pattern.matcher(jsonStr);
	          // 查找字符串中是否有匹配正则表达式的字符/字符串
	          while(matcher.find()) {
	        	   //获取匹配字符串
		        String rs = matcher.group(1);
		        vars.put(&quot;tokenId&quot;, rs);
               }
			
		}catch(Exception e){
			FailureMessage = &quot;失败，接口加密串：&quot; + encrypt; 
			Failure = true;
			
		}
	}
} else {
	Failure = false;
	
}






</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="获取tokneId" enabled="true">
            <stringProp name="dataSource">DB</stringProp>
            <stringProp name="query">SELECT token_id from ejet_user_separate where user_id = &apos;${userId}&apos; and server_type = &quot;c&quot; limit 1;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="variableNames">tokenId</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="获取offerTagId" enabled="true">
            <stringProp name="dataSource">DB</stringProp>
            <stringProp name="query">SELECT if(offer_tag_id is not NULL, offer_tag_id, &quot;-1&quot;) from ejet_user u
LEFT JOIN ejet_offer_tag t on t.user_id = u.user_id and del_status = 0
where u.user_id = &apos;${userId}&apos; limit 1;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="variableNames">offerTagId</stringProp>
          </JDBCSampler>
          <hashTree/>
          <IfController guiclass="IfControllerPanel" testclass="IfController" testname="如果（If）控制器" enabled="true">
            <stringProp name="IfController.condition">&quot;${offerTagId}&quot;==&quot;-1&quot;</stringProp>
            <boolProp name="IfController.evaluateAll">false</boolProp>
          </IfController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="16.新建offer tag" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">offerplus.imwork.net</stringProp>
              <stringProp name="HTTPSampler.port">82</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/offerplus/newOfferTag.do?${postPro}</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <BeanShellTimer guiclass="TestBeanGUI" testclass="BeanShellTimer" testname="初始化数据" enabled="true">
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="script">import java.util.ArrayList;
import java.util.Collections;
import java.util.Comparator;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import org.apache.commons.codec.digest.DigestUtils;

String [] appTypes = {&quot;A&quot;, &quot;I&quot;};
long L = System.currentTimeMillis();

Map map = new HashMap();
//此处为接口必传参数
map.put(&quot;packageName&quot;, &quot;com.Ejetsolutions.offerplus&quot;);
map.put(&quot;appType&quot;, &quot;I&quot;);
map.put(&quot;version&quot;, &quot;1.1.5&quot;);

map.put(&quot;languagePack&quot;, &quot;EN&quot;);
map.put(&quot;source&quot;, &quot;0&quot;);
map.put(&quot;timestamp&quot;, String.valueOf(L));
map.put(&quot;tokenId&quot;, vars.get(&quot;tokenId_1&quot;));

map.put(&quot;offerTagName&quot;, java.net.URLEncoder.encode(&quot;[\&quot;testTag\&quot;]&quot;));

String []str = new String[map.size()];

Iterator it = map.keySet().iterator();  

StringBuffer sb = new StringBuffer();
sb.append(&quot;&quot;);
StringBuffer sb2 = new StringBuffer();
sb2.append(&quot;&quot;);
int i = 0;
while(it.hasNext()) {
	str[i] = (String) it.next();
	i ++;
}

//排序
Arrays.sort(str);

for (int j = 0; j &lt; str.length; j ++) {
	sb.append(str[j]).append(&quot;=&quot;).append(map.get(str[j]));
	if (str[j].equals(&quot;offerTagName&quot;)) {
		sb2.append(str[j]).append(&quot;=&quot;).append(&quot;[\&quot;testTag\&quot;]&quot;);
	} else {
		sb2.append(str[j]).append(&quot;=&quot;).append(map.get(str[j]));
	}
	if (j != str.length -1) {
		sb.append(&quot;&amp;&quot;);
		sb2.append(&quot;&amp;&quot;);
	} 
}


//对入参进行MD5签名
String sign = DigestUtils.md5Hex(sb2.toString() + &quot;&amp;99ca919b-4c6e-46d7-b25e-e0cbb9003436&quot;);

String postPro = sb.append(&quot;&amp;sign=&quot;).append(sign).toString();

vars.put(&quot;postPro&quot;, postPro);</stringProp>
              </BeanShellTimer>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1783684952">&quot;status&quot;:&quot;000&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="获取contactId" enabled="true">
            <stringProp name="dataSource">DB</stringProp>
            <stringProp name="query">SELECT if(contact_user_id is not NULL, contact_user_id, &quot;-1&quot;) from ejet_user u
LEFT JOIN ejet_user_contact c on c.user_id = u.user_id and contact_status = 0
where u.user_id = &apos;${userId}&apos; limit 1;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="variableNames">contactId</stringProp>
          </JDBCSampler>
          <hashTree/>
          <IfController guiclass="IfControllerPanel" testclass="IfController" testname="判断是否有联系人了" enabled="true">
            <stringProp name="IfController.condition">&quot;${contactId_1}&quot;==&quot;-1&quot;</stringProp>
            <boolProp name="IfController.evaluateAll">false</boolProp>
          </IfController>
          <hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="获取userTagId" enabled="true">
              <stringProp name="dataSource">DB</stringProp>
              <stringProp name="query">SELECT if(tag_id is not NULL, tag_id, &quot;-1&quot;) from ejet_user u
LEFT JOIN ejet_user_tag t on t.user_id = u.user_id and t.del_tag = 0
where u.user_id = &apos;${userId}&apos; limit 1;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames">userTagId</stringProp>
            </JDBCSampler>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="13.添加陌生人" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">offerplus.imwork.net</stringProp>
              <stringProp name="HTTPSampler.port">82</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/offerplus/addStangeUser.do?${postPro}</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <BeanShellTimer guiclass="TestBeanGUI" testclass="BeanShellTimer" testname="初始化数据" enabled="true">
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="script">import java.util.ArrayList;
import java.util.Collections;
import java.util.Comparator;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import org.apache.commons.codec.digest.DigestUtils;

String [] appTypes = {&quot;A&quot;, &quot;I&quot;};
long L = System.currentTimeMillis();

Map map = new HashMap();
//此处为接口必传参数
map.put(&quot;packageName&quot;, &quot;com.Ejetsolutions.offerplus&quot;);
map.put(&quot;appType&quot;, &quot;I&quot;);
map.put(&quot;version&quot;, &quot;1.1.5&quot;);

map.put(&quot;languagePack&quot;, &quot;EN&quot;);
map.put(&quot;source&quot;, &quot;0&quot;);
map.put(&quot;timestamp&quot;, String.valueOf(L));
map.put(&quot;tokenId&quot;, vars.get(&quot;tokenId_1&quot;));

map.put(&quot;stranUserId&quot;, vars.get(&quot;contactUserId&quot;));
map.put(&quot;addRemark&quot;, &quot;测试添加陌生人&quot;);
map.put(&quot;tagId&quot;, vars.get(&quot;userTagId_1&quot;));

String [] from = {&quot;0&quot;, &quot;1&quot;, &quot;2&quot;, &quot;3&quot;};
map.put(&quot;from&quot;, from[(int)(Math.random() * from.length)]);
map.put(&quot;nickName&quot;, &quot;胡慧超&quot;);

String []str = new String[map.size()];

Iterator it = map.keySet().iterator();  

StringBuffer sb = new StringBuffer();
sb.append(&quot;&quot;);
int i = 0;
while(it.hasNext()) {
	str[i] = (String) it.next();
	i ++;
}

//排序
Arrays.sort(str);

for (int j = 0; j &lt; str.length; j ++) {
	sb.append(str[j]).append(&quot;=&quot;).append(map.get(str[j]));
	if (j != str.length -1) {
		sb.append(&quot;&amp;&quot;);
	} 
}


//对入参进行MD5签名
String sign = DigestUtils.md5Hex(sb.toString() + &quot;&amp;99ca919b-4c6e-46d7-b25e-e0cbb9003436&quot;);

String postPro = sb.append(&quot;&amp;sign=&quot;).append(sign).toString();

vars.put(&quot;postPro&quot;, postPro);</stringProp>
              </BeanShellTimer>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1783684952">&quot;status&quot;:&quot;000&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="获取是否有已添加的好友请求 " enabled="true">
              <stringProp name="dataSource">DB</stringProp>
              <stringProp name="query">SELECT if(f_user_id is NOT NULL, f_user_id, &quot;-1&quot;) from ejet_user u
LEFT JOIN ejet_accept_user c on c.t_user_id = u.user_id and c.del_status = 0
where u.user_id = &apos;${userId}&apos; limit 1;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames">stranUserId</stringProp>
            </JDBCSampler>
            <hashTree/>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="判断是否有未接受的好友" enabled="true">
              <stringProp name="IfController.condition">&quot;${stranUserId_1}&quot;!=&quot;-1&quot;</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="15.接受陌生人" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                  <collectionProp name="Arguments.arguments"/>
                </elementProp>
                <stringProp name="HTTPSampler.domain">offerplus.imwork.net</stringProp>
                <stringProp name="HTTPSampler.port">82</stringProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                <stringProp name="HTTPSampler.path">/offerplus/acceptStangeUser.do?${postPro}</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <BeanShellTimer guiclass="TestBeanGUI" testclass="BeanShellTimer" testname="初始化数据" enabled="true">
                  <boolProp name="resetInterpreter">false</boolProp>
                  <stringProp name="parameters"></stringProp>
                  <stringProp name="filename"></stringProp>
                  <stringProp name="script">import java.util.ArrayList;
import java.util.Collections;
import java.util.Comparator;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import org.apache.commons.codec.digest.DigestUtils;

String [] appTypes = {&quot;A&quot;, &quot;I&quot;};
long L = System.currentTimeMillis();

Map map = new HashMap();
//此处为接口必传参数
map.put(&quot;packageName&quot;, &quot;com.Ejetsolutions.offerplus&quot;);
map.put(&quot;appType&quot;, &quot;I&quot;);
map.put(&quot;version&quot;, &quot;1.1.5&quot;);

map.put(&quot;languagePack&quot;, &quot;EN&quot;);
map.put(&quot;source&quot;, &quot;0&quot;);
map.put(&quot;timestamp&quot;, String.valueOf(L));
map.put(&quot;tokenId&quot;, vars.get(&quot;tokenId_1&quot;));

map.put(&quot;stranUserId&quot;, vars.get(&quot;stranUserId_1&quot;));
map.put(&quot;tagId&quot;, vars.get(&quot;userTagId_1&quot;));

String []str = new String[map.size()];

Iterator it = map.keySet().iterator();  

StringBuffer sb = new StringBuffer();
sb.append(&quot;&quot;);
int i = 0;
while(it.hasNext()) {
	str[i] = (String) it.next();
	i ++;
}

//排序
Arrays.sort(str);

for (int j = 0; j &lt; str.length; j ++) {
	sb.append(str[j]).append(&quot;=&quot;).append(map.get(str[j]));
	if (j != str.length -1) {
		sb.append(&quot;&amp;&quot;);
	} 
}


//对入参进行MD5签名
String sign = DigestUtils.md5Hex(sb.toString() + &quot;&amp;99ca919b-4c6e-46d7-b25e-e0cbb9003436&quot;);

String postPro = sb.append(&quot;&amp;sign=&quot;).append(sign).toString();

vars.put(&quot;postPro&quot;, postPro);</stringProp>
                </BeanShellTimer>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-1783684952">&quot;status&quot;:&quot;000&quot;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="APP端make Offer" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">offerplus.imwork.net</stringProp>
            <stringProp name="HTTPSampler.port">82</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/offerplus/makeOfferEnd.do?${postPro}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellTimer guiclass="TestBeanGUI" testclass="BeanShellTimer" testname="初始化数据" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import java.util.Arrays;
import java.util.HashMap;
import java.util.Iterator;
import java.util.Map;
import org.apache.commons.codec.digest.DigestUtils;
import com.alibaba.fastjson.JSON;
import com.alibaba.fastjson.JSONArray;
import com.alibaba.fastjson.JSONObject;

String [] appTypes = {&quot;A&quot;, &quot;I&quot;};
long L = System.currentTimeMillis();

Map map = new HashMap();
//此处为接口必传参数
map.put(&quot;packageName&quot;, &quot;com.Ejetsolutions.offerplus&quot;);
map.put(&quot;appType&quot;, &quot;I&quot;);
map.put(&quot;version&quot;, &quot;1.1.5&quot;);

map.put(&quot;languagePack&quot;, &quot;EN&quot;);
map.put(&quot;source&quot;, &quot;0&quot;);
map.put(&quot;timestamp&quot;, String.valueOf(L));
map.put(&quot;tokenId&quot;, vars.get(&quot;tokenId_1&quot;));

JSONArray ja = new JSONArray();
JSONObject json1 = new JSONObject();
JSONObject json2 = new JSONObject();
JSONObject json3 = new JSONObject();
JSONObject json4 = new JSONObject();
JSONObject json5 = new JSONObject();

json1.put(&quot;sheetName&quot;, &quot;MOQ&quot;);
json1.put(&quot;sheetValue&quot;, &quot;test&quot;);
ja.add(json1);
json2.put(&quot;sheetName&quot;, &quot;Brand Name&quot;);
json2.put(&quot;sheetValue&quot;, &quot;test&quot;);
ja.add(json2);
json3.put(&quot;sheetName&quot;, &quot;Stock&quot;);
json3.put(&quot;sheetValue&quot;, &quot;test&quot;);
ja.add(json3);
json4.put(&quot;sheetName&quot;, &quot;Port&quot;);
json4.put(&quot;sheetValue&quot;, &quot;test&quot;);
ja.add(json4);
json5.put(&quot;sheetName&quot;, &quot;CBM&quot;);
json5.put(&quot;sheetValue&quot;, &quot;test&quot;);
ja.add(json5);

map.put(&quot;offerName&quot;, &quot;this is test offer&quot;);
map.put(&quot;offerDescrip&quot;, &quot;this is test offer Descrption&quot;);
map.put(&quot;offerBuyPrice&quot;, &quot;12.3456&quot;);
map.put(&quot;offerSellPrice&quot;, &quot;45678.232&quot;);
map.put(&quot;offerBuyCry&quot;, &quot;AUD&quot;);
map.put(&quot;offerSellCry&quot;, &quot;RUB&quot;);
map.put(&quot;offerUnit&quot;, &quot;PCS&quot;);
String a1 = vars.get(&quot;contactId_1&quot;);
if(!a1.equals(&quot;-1&quot;)) {
	map.put(&quot;contactStatus&quot;, &quot;1&quot;);
	map.put(&quot;contactUserId&quot;, vars.get(&quot;contactId_1&quot;));
} else {
	map.put(&quot;contactStatus&quot;, &quot;0&quot;);
}
map.put(&quot;makeOfferTime&quot;, String.valueOf(L));

map.put(&quot;offerIsCopy&quot;, &quot;0&quot;);
String a2 = vars.get(&quot;offerTagId_1&quot;);
if(!a2.equals(&quot;-1&quot;)) {
	map.put(&quot;arrTagId&quot;, vars.get(&quot;offerTagId_1&quot;));
}
map.put(&quot;offerArrSheet&quot;, java.net.URLEncoder.encode(ja.toString()));
map.put(&quot;offerImg&quot;, &quot;03bbcff1-f0c8-4b3d-8ddd-c5779a79cd4c&quot;);

String []str = new String[map.size()];

Iterator it = map.keySet().iterator();  

StringBuffer sb = new StringBuffer();
sb.append(&quot;&quot;);
StringBuffer sb2 = new StringBuffer();
sb2.append(&quot;&quot;);
int i = 0;
while(it.hasNext()) {
	str[i] = (String) it.next();
	i ++;
}

//排序
Arrays.sort(str);

for (int j = 0; j &lt; str.length; j ++) {
	sb.append(str[j]).append(&quot;=&quot;).append(map.get(str[j]));
	if (str[j].equals(&quot;offerArrSheet&quot;)) {
		sb2.append(str[j]).append(&quot;=&quot;).append(JSON.toJSON(ja));
	} else {
		sb2.append(str[j]).append(&quot;=&quot;).append(map.get(str[j]));
	}
	if (j != str.length -1) {
		sb.append(&quot;&amp;&quot;);
		sb2.append(&quot;&amp;&quot;);
	} 
}


//对入参进行MD5签名
String sign = DigestUtils.md5Hex(sb2.toString() + &quot;&amp;99ca919b-4c6e-46d7-b25e-e0cbb9003436&quot;);

String postPro = sb.append(&quot;&amp;sign=&quot;).append(sign).toString();

vars.put(&quot;postPro&quot;, postPro);</stringProp>
            </BeanShellTimer>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1783684952">&quot;status&quot;:&quot;000&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <ResultCollector guiclass="StatVisualizer" testclass="ResultCollector" testname="聚合报告" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="察看结果树" enabled="true">
          <boolProp name="ResultCollector.error_logging">true</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
          <collectionProp name="HeaderManager.headers">
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Accept-Language</stringProp>
              <stringProp name="Header.value">zh-CN,zh;q=0.8,en-US;q=0.5,en;q=0.3</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Connection</stringProp>
              <stringProp name="Header.value">keep-alive</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">User-Agent</stringProp>
              <stringProp name="Header.value">Apache-HttpClient/4.2.5 (java 1.5)</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Accept-Encoding</stringProp>
              <stringProp name="Header.value">gzip, deflate</stringProp>
            </elementProp>
          </collectionProp>
        </HeaderManager>
        <hashTree/>
        <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
          <stringProp name="delimiter">,</stringProp>
          <stringProp name="fileEncoding">utf-8</stringProp>
          <stringProp name="filename">test_presstion_makeOffer.csv</stringProp>
          <boolProp name="ignoreFirstLine">false</boolProp>
          <boolProp name="quotedData">false</boolProp>
          <boolProp name="recycle">true</boolProp>
          <stringProp name="shareMode">shareMode.all</stringProp>
          <boolProp name="stopThread">false</boolProp>
          <stringProp name="variableNames">userId,contactUserId,password</stringProp>
        </CSVDataSet>
        <hashTree/>
        <JDBCDataSource guiclass="TestBeanGUI" testclass="JDBCDataSource" testname="数据库配置-开发" enabled="true">
          <boolProp name="autocommit">true</boolProp>
          <stringProp name="checkQuery">Select 1</stringProp>
          <stringProp name="connectionAge">5000</stringProp>
          <stringProp name="dataSource">DB</stringProp>
          <stringProp name="dbUrl">jdbc:mysql://offerplus.imwork.net:3306/cn_offerplus</stringProp>
          <stringProp name="driver">com.mysql.jdbc.Driver</stringProp>
          <boolProp name="keepAlive">true</boolProp>
          <stringProp name="password">R7evMxOvLX</stringProp>
          <stringProp name="poolMax">10</stringProp>
          <stringProp name="timeout">10000</stringProp>
          <stringProp name="transactionIsolation">DEFAULT</stringProp>
          <stringProp name="trimInterval">60000</stringProp>
          <stringProp name="username">root</stringProp>
        </JDBCDataSource>
        <hashTree/>
        <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="true">
          <boolProp name="displayJMeterProperties">false</boolProp>
          <boolProp name="displayJMeterVariables">true</boolProp>
          <boolProp name="displaySystemProperties">false</boolProp>
        </DebugSampler>
        <hashTree/>
      </hashTree>
    </hashTree>
    <WorkBench guiclass="WorkBenchGui" testclass="WorkBench" testname="工作台" enabled="true">
      <boolProp name="WorkBench.save">true</boolProp>
    </WorkBench>
    <hashTree/>
  </hashTree>
</jmeterTestPlan>
